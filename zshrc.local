# Troubleshooting:
#   zmodload zsh/zprof

# In file:~/.zshrc
# plugins=(
#   osx
#   git
#   man
#   battery
#   brew
#   web-search
#   common-aliases
#   thefuck `brew install thefuck`
# )

export PATH=$HOME/.local/bin:$PATH:$HOME/bin

# Solves - ValueError: unknown locale: UTF-8 in Python
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8

# Gradle
export GRADLE_HOME=/opt/gradle/gradle-2.4
export PATH="$GRADLE_HOME/bin:$PATH"

# Heroku
export PATH="/usr/local/heroku/bin:$PATH"

# RVM
export PATH="$PATH:$HOME/.rvm/bin"

# Conscript - ?... http://scalatra.org/getting-started/installation.html
export PATH="$PATH:$HOME/.conscript/bin"

export SCALA_HOME=/usr/local/share/scala
export PATH=$PATH:$SCALA_HOME/bin

SPARK_HOME="/opt/spark/spark-1.6.1-bin-hadoop2.6"
export PATH="$PATH:$SPARK_HOME/bin"

# Godep
export GOPATH=$HOME/go

# OSX provides an older version of sqlite3, we override
export PATH="/usr/local/opt/sqlite/bin:$PATH"

# Powerlines - powerline.readthedocs.org
export PATH=$PATH:$HOME/Library/Python/2.7/bin
# Update (manual, laggy):
# pip2 show powerline-status | grep Location | cut -f 2 -d ":" | tr -d ' '
# echo "export POWERLINES_REPOSITORY_ROOT=$(pip2 show powerline-status | grep Location | cut -f 2 -d ":" | tr -d ' ')" >> ~/.extra.envs
# powerline-daemon --quiet
# . $POWERLINES_REPOSITORY_ROOT/powerline/bindings/zsh/powerline.zsh

source $HOME/github.com/brianmulder/dotfiles/aliases
source $HOME/github.com/brianmulder/scripts/functions

# Update (manual, laggy):
#   echo "export COREUTILS_BIN=$(brew --prefix coreutils)/libexec/gnubin" >> ~/.extra.envs

# For anything that doesn't belong in source control.
source $HOME/.extra.envs

# Blat in any direcctories with custom functions listed here:
# Or `ln` them into `$HOME/.oh-my-zsh/custom`
# Note: Individual files must be suffixed with .zsh I think...
if [ -e "$HOME/.functions_extra" ]
then
  cat $HOME/.functions_extra | while read d; do source $d/*; done
fi

# SSH
export SSH_AUTH_SOCK=~/.agent_ssh_auth_sock

# `> brew install direnv`
eval "$(direnv hook zsh)"

# Meh
# PERL_MM_OPT="INSTALL_BASE=$HOME/perl5" cpan local::lib
# eval "$(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib)"

export PATH="$COREUTILS_BIN:/usr/local/bin:$PATH"
